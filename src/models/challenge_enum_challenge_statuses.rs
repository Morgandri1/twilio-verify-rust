/*
 * Twilio - Verify
 *
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@twilio.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ChallengeEnumChallengeStatuses : The Status of this Challenge. One of `pending`, `expired`, `approved` or `denied`.
/// The Status of this Challenge. One of `pending`, `expired`, `approved` or `denied`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ChallengeEnumChallengeStatuses {
    #[serde(rename = "pending")]
    Pending,
    #[serde(rename = "expired")]
    Expired,
    #[serde(rename = "approved")]
    Approved,
    #[serde(rename = "denied")]
    Denied,

}

impl std::fmt::Display for ChallengeEnumChallengeStatuses {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Pending => write!(f, "pending"),
            Self::Expired => write!(f, "expired"),
            Self::Approved => write!(f, "approved"),
            Self::Denied => write!(f, "denied"),
        }
    }
}

impl Default for ChallengeEnumChallengeStatuses {
    fn default() -> ChallengeEnumChallengeStatuses {
        Self::Pending
    }
}

