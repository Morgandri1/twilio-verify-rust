/*
 * Twilio - Verify
 *
 * This is the public Twilio REST API.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@twilio.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ChallengeEnumChallengeReasons : Reason for the Challenge to be in certain `status`. One of `none`, `not_needed` or `not_requested`.
/// Reason for the Challenge to be in certain `status`. One of `none`, `not_needed` or `not_requested`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ChallengeEnumChallengeReasons {
    #[serde(rename = "none")]
    None,
    #[serde(rename = "not_needed")]
    NotNeeded,
    #[serde(rename = "not_requested")]
    NotRequested,

}

impl std::fmt::Display for ChallengeEnumChallengeReasons {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::None => write!(f, "none"),
            Self::NotNeeded => write!(f, "not_needed"),
            Self::NotRequested => write!(f, "not_requested"),
        }
    }
}

impl Default for ChallengeEnumChallengeReasons {
    fn default() -> ChallengeEnumChallengeReasons {
        Self::None
    }
}

